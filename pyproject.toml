[tool.poetry]
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
loguru = "^0.7.2"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.1"
pytest-mock = "^3.14.0"
ruff = "^0.5.4"
pre-commit = "^3.7.1"
pyright = "^1.1.372"



[tool.ruff]
target-version = "py312"
line-length = 100

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "E501",  # Line too long

  "D",  # pydocstyle
  "S",  # flake8-bandit
  "W",  # pycodestyle warnings (покрываются форматированием)
  "EM", "TRY003",  # Передача строк в конструктор исключений
  "TD", "FIX",  # flake8-todos, flake8-fixme
  "TCH",  # flake8-type-checking
  "ANN101", "ANN102",  # Missing type annotation for `self/cls`
  "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed
  "RUF001", "RUF002", "RUF003",  # ambiguous character warnings (Не работают с кириллицей)
  "COM812", "ISC001",  # following rules may cause conflicts when used with the formatter
  "PGH003",  # Use specific rule codes when ignoring type issues
  "BLE001",  # Do not catch blind exception: `Exception`
  "ERA",  # Found commented-out code
  
  "PLR2004",  # Magic variable
  "T201"  # Print found
]



[tool.pyright]
include = ["app", "tests"]
exclude = ["**/__pycache__"]
venvPath = "."
venv = ".venv"

reportUnnecessaryTypeIgnoreComment = true
enableTypeIgnoreComments = false
