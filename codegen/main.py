import contextlib
import importlib
import pkgutil
from abc import ABCMeta
from pathlib import Path

import app
from codegen import adapter
from codegen.decorators import requested_adapter


def main() -> None:
    # Рекурсивно импортировать пакет app, отработали декораторы
    for module in pkgutil.walk_packages(app.__path__, app.__name__ + "."):
        # Ошибки импорта будут в модулях, которые импортируют сгенерированный код
        with contextlib.suppress(ImportError):
            importlib.import_module(module.name)

    destination = Path("app/autogenerated")
    destination.mkdir(exist_ok=True)

    generate_adapters(requested_adapter, destination / "adapters")


def generate_adapters(interfaces: list[ABCMeta], destination: Path) -> None:
    adapter.create_adapters(interfaces, destination)


if __name__ == "__main__":
    main()
